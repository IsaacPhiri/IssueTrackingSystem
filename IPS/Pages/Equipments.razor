@page "/equipments"
@inject HttpClient httpClient
@inject IJSRuntime javaScript
<h3>Manage Equipments</h3>
<EditForm Model="@equipment" OnValidSubmit="Save">
    <DataAnnotationsValidator/>
    <div class="row pa-4">
        <div style="max-width:45vw; margin-bottom:20px;" class="col-sm-12">
            <label for="nameInput">Equipment's Name</label>
            <InputText id="nameInput" @bind-Value="@equipment.Name" placeholder="Name" class="form-control"/>
        </div>
        <div style="max-width:45vw; margin-bottom:20px;" class="col-sm-12">
            <label for="nameInput1">Description</label>
            <InputText id="nameInput1" @bind-Value="@equipment.Description"  placeholder="Description" class="form-control"/>
        </div> 
        <div style="max-width:45vw; margin-bottom:20px;" class="col-sm-12">
            <label for="nameInput2">Location</label>
            <InputText id="nameInput2" @bind-Value="@equipment.Location" placeholder="Location" class="form-control"/>
        </div>  
        <div style="max-width:45vw; margin-bottom:20px;" class="col-sm-12">
            <label for="nameInput3">Department</label>
            <InputSelect placeholder="select department" id="nameInput3" class="form-control"  @bind-Value="@equipment.DepartmentId">
                @foreach(var record in departments)
                {
                    <option value="@record.Id">@record.Name</option>
                }
            </InputSelect>
        </div> 
        <div class="col-sm-12">
           <button type="submit"  class="btn btn-success"><i class="oi oi-file"></i>Save</button>
        </div>
    </div>
</EditForm>
<hr/>
<table class="table table-striped table-hover mt-6">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>Department</th>
            <th>Location</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in tableData)
        {
           <tr>
               <td>@record.Id</td>
               <td>@record.Name</td>
               <td>@record.Description</td>
               <td>@record.Department.Name</td>
               <td>@record.Location</td>
               <td>
                   <button @onclick="()=>Edit(record)" class="btn btn-warning"><i class="oi oi-pencil"></i>Edit</button>
                   <button @onclick="()=>Delete(record.Id)" class="btn btn-danger"><i class="oi oi-trash"></i>Delete</button>
               </td>
           </tr>
        }
    </tbody>
</table>

@code {
    List<Equipment> tableData = new();
    Equipment equipment = new();
    List<Department> departments = new();
    protected override async void OnInitialized()
    {
        await LoadData();
    }
    async Task LoadData()
    {
        equipment = new();
        var response = await httpClient.GetAsync("equipment");
        var response1 = await httpClient.GetAsync("department");
        if (response.IsSuccessStatusCode)
        {
            tableData = await response.Content.ReadFromJsonAsync<List<Equipment>>();
            StateHasChanged();
        } 
        if (response1.IsSuccessStatusCode)
        {
            departments = await response1.Content.ReadFromJsonAsync<List<Department>>();
            StateHasChanged();
        }
    }
    void Edit(Equipment record)
    {
        equipment = record;

    }
    async Task Delete(int id)
    {
        var confirm = await javaScript.InvokeAsync<bool>("confirm", "Are you sure you want to delete this record?");
        if (!confirm)
        {
            return;
        }
        var response = await httpClient.DeleteAsync($"equipment/{id}");
        if (response.IsSuccessStatusCode)
        {
            await LoadData();
        }
        else
        {
            await javaScript.InvokeVoidAsync("alert", "An error occurred while trying to delete the equipment");
        }
    }
    async Task Save()
    {
        if (equipment.Id == 0)
        {
            var response = await httpClient.PostAsJsonAsync("equipment", equipment);
            if (response.IsSuccessStatusCode)
            {

                await LoadData();
            }
            else
            {
                await javaScript.InvokeVoidAsync("alert", "An error occurred while trying to save!");
            }
        }
        else
        {
            var response = await httpClient.PutAsJsonAsync($"equipment/{equipment.Id}", equipment);
            if (response.IsSuccessStatusCode)
            {
                await LoadData();
            }
            else
            {
                await javaScript.InvokeVoidAsync("alert", "An error occurred while trying to save!");
            }
        }
    }

}